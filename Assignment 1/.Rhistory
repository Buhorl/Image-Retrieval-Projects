Corpus()
library(wordcloud2)
library(cld3) # For detecting languages
library(tm) # For text mining
install.packages("cld3")
library(cld3) # For detecting languages
install.packages("cld3")
install.packages("cld2")
get_frequent_words(corpus_early)
wordcloud2(get_frequent_words(corpus_early))
wordcloud2(get_frequent_words(corpus_late))
wordcloud2(get_frequent_words(corpus))
wordcloud2(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
wordcloud2(get_frequent_words(corpus, min.freq = 3, max.words = 100,
wordcloud2(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
)
wordcloud2(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
install.packages("wordcloud")
wordcloud(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
library(wordcloud)
wordcloud(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
wordcloud(get_frequent_words(corpus), min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
#We set a seed for the WC
set.seed(2020)
fw_early <- get_frequent_words(corpus_early)
fw_late <- get_frequent_words(corpus_late)
fw_all <- get_frequent_words(corpus)
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(6, "Dark2"))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(10, "Dark2"))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(10, "Dark2"))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(3, "Dark2"))
wordcloud2(get_frequent_words(corpus_late))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(3, "Dark2"))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"))
wordcloud2(get_frequent_words(corpus_late))
wordcloud2(get_frequent_words(corpus_late))
source('~/Desktop/Projects/Info Retrieval/Ass1/script.R')
library(wordcloud)
library(wordcloud)
library(wordcloud2)
library(cld2) # For detecting languages
library(tm) # For text mining
library(RColorBrewer)
#We set a seed for the WC
set.seed(2020)
#We load the file
corpus <- read.csv("./corpus.csv")
#Task 1: Creating a new column.
selected_nan <- ifelse(corpus$seer_stage == 8 | corpus$seer_stage == 9, T, F)
selected_late <- ifelse(corpus$seer_stage == 4 | corpus$seer_stage == 5 | corpus$seer_stage == 7, T, F)
selected_early <- ifelse(corpus$seer_stage == 1 | corpus$seer_stage == 2 | corpus$seer_stage == 3 | corpus$seer_stage == 6, T, F)
corpus <- corpus %>%
mutate(seer_stage_2 = ifelse(
selected_late, "later_stage",
ifelse(selected_nan, "nan", "early_stage")
)) #I guess filtering out the 8 and 9 means creating another category
#Task 2:
#We build a function
get_frequent_words <- function(dataset) {
## Read corpus
docs <- Corpus(VectorSource(unlist(dataset$MEDICATION_SUMMARY)))
## Preprocess corpus
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
## Build term document matrix
docs_term_matrix <- as.matrix(TermDocumentMatrix(docs))
sorted_docs_term_matrix <- sort(rowSums(docs_term_matrix), decreasing=TRUE)
frequent_words <- data.frame(word = names(sorted_docs_term_matrix), freq=sorted_docs_term_matrix)
frequent_words
}
fw_early <- get_frequent_words(filter(corpus, seer_stage_2 == "early_stage"))
fw_late <- get_frequent_words(filter(corpus, seer_stage_2 == "later_stage"))
fw_all <- get_frequent_words(corpus)
wordcloud2(get_frequent_words(corpus_early))
wordcloud2(fw_early)
wordcloud2(fw_late)
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"))
warnings()
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(4,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 3, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
View(fw_all)
View(fw_all)
wordcloud2(fw_early)
wordcloud2(fw_late)
wordcloud2(fw_all)
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = -pi/4, maxRotation = pi/4)
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0)
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0,fontFamily ='Segoe UI')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0,fontFamily ='Arial')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial', shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial', ellipticity = 0.65, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial', ellipticity = 0, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', fontFamily ='Arial', ellipticity = 3, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 3, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 3, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 2, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(cld2) # For detecting languages
library(tm) # For text mining
library(RColorBrewer)
#We set a seed for the WC
set.seed(2020)
#We load the file
corpus <- read.csv("./corpus.csv")
#Task 1: Creating a new column.
selected_nan <- ifelse(corpus$seer_stage == 8 | corpus$seer_stage == 9, T, F)
selected_late <- ifelse(corpus$seer_stage == 4 | corpus$seer_stage == 5 | corpus$seer_stage == 7, T, F)
selected_early <- ifelse(corpus$seer_stage == 1 | corpus$seer_stage == 2 | corpus$seer_stage == 3 | corpus$seer_stage == 6, T, F)
corpus <- corpus %>%
mutate(seer_stage_2 = ifelse(
selected_late, "later_stage",
ifelse(selected_nan, "nan", "early_stage")
)) #I guess filtering out the 8 and 9 means creating another category
#Task 2:
#We build a function
get_frequent_words <- function(dataset) {
## Read corpus
docs <- Corpus(VectorSource(unlist(dataset$MEDICATION_SUMMARY)))
## Preprocess corpus
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
## Build term document matrix
docs_term_matrix <- as.matrix(TermDocumentMatrix(docs))
sorted_docs_term_matrix <- sort(rowSums(docs_term_matrix), decreasing=TRUE)
frequent_words <- data.frame(word = names(sorted_docs_term_matrix), freq=sorted_docs_term_matrix)
frequent_words
}
fw_early <- get_frequent_words(filter(corpus, seer_stage_2 == "early_stage"))
fw_late <- get_frequent_words(filter(corpus, seer_stage_2 == "later_stage"))
fw_all <- get_frequent_words(corpus)
#We create the wc using wordcloud
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
library(dplyr)
source('~/Desktop/Projects/Info Retrieval/Ass1/script.R', echo=TRUE)
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
install.packages("cld2")
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(cld2) # For detecting languages
library(tm) # For text mining
library(RColorBrewer)
#We set a seed for the WC
set.seed(2020)
#We load the file
corpus <- read.csv("./corpus.csv")
#Task 1: Creating a new column.
selected_nan <- ifelse(corpus$seer_stage == 8 | corpus$seer_stage == 9, T, F)
selected_late <- ifelse(corpus$seer_stage == 4 | corpus$seer_stage == 5 | corpus$seer_stage == 7, T, F)
selected_early <- ifelse(corpus$seer_stage == 1 | corpus$seer_stage == 2 | corpus$seer_stage == 3 | corpus$seer_stage == 6, T, F)
corpus <- corpus %>%
mutate(seer_stage_2 = ifelse(
selected_late, "later_stage",
ifelse(selected_nan, "nan", "early_stage")
)) #I guess filtering out the 8 and 9 means creating another category
#Task 2:
#We build a function
get_frequent_words <- function(dataset) {
## Read corpus
docs <- Corpus(VectorSource(unlist(dataset$MEDICATION_SUMMARY)))
## Preprocess corpus
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
## Build term document matrix
docs_term_matrix <- as.matrix(TermDocumentMatrix(docs))
sorted_docs_term_matrix <- sort(rowSums(docs_term_matrix), decreasing=TRUE)
frequent_words <- data.frame(word = names(sorted_docs_term_matrix), freq=sorted_docs_term_matrix)
frequent_words
}
fw_early <- get_frequent_words(filter(corpus, seer_stage_2 == "early_stage"))
fw_late <- get_frequent_words(filter(corpus, seer_stage_2 == "later_stage"))
fw_all <- get_frequent_words(corpus)
#We create the wc using wordcloud
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"))
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 1.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.7, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
View(fw_all)
head(fw_early)
head(fw_latwe)
head(fw_late)
head(fw_all)
View(fw_all)
View(fw_early)
View(fw_late)
View(corpus)
#Loading the RAKE results for the WC
rlate <- read.csv("./rake_late.csv")
rearly <- read.csv("./rake_early.csv")
rall <- read.csv("./rake_all.csv")
new <- c(rlate$keyword,rlate$rake)
new <- data.frame(rlate$keyword,rlate$rake)
View(new)
df.rlate <- data.frame(rlate$keyword, rlate$rake)
df.rearly <- data.frame(rearly$keyword, rearly$rake)
df.rall <- data.frame(rall$keyword, rall$rake)
View(rall)
View(df.rall)
wordcloud2(df.rlate,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
library(wordcloud)
library(wordcloud2)
library(cld2) # For detecting languages
library(tm) # For text mining
library(RColorBrewer)
wordcloud2(df.rlate,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rearly,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rall,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rlate,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rlate,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rearly,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rall,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(df.rlate,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 1, shape ='circle')
wordcloud2(df.rall,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 0.8, fontFamily ='Arial', ellipticity = 1, shape ='circle')
#We adapt the data
df.rlate <- data.frame(rlate$keyword, rlate$rake, c("kword","freq"))
View(df.rlate)
#We adapt the data
df.rlate <- data.frame(rlate$keyword, rlate$rake, row.names = c("kword","freq"))
#We adapt the data
df.rlate <- data.frame(kword = rlate$keyword, freq = rlate$rake)
View(df.rlate)
#We adapt the data
df.rlate <- data.frame(kword = rlate$keyword, freq = rlate$rake)
df.rearly <- data.frame(kword = rearly$keyword, freq = rearly$rake)
df.rall <- data.frame(kword = rall$keyword, freq = rall$rake)
#We create the wc using wordcloud
wordcloud(df.rlate$kword, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"))
wordcloud(df.rearly$kword, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(df.rall$kword, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We set a seed for the WC
set.seed(2020)
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
install.packages("udpipe")
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(cld2) # For detecting languages
library(tm) # For text mining
library(RColorBrewer)
library(udpipe)
library(lattice)
#We set a seed for the WC
set.seed(2020)
#We load the file
corpus <- read.csv("./corpus.csv")
#Task 1: Creating a new column.
selected_nan <- ifelse(corpus$seer_stage == 8 | corpus$seer_stage == 9, T, F)
selected_late <- ifelse(corpus$seer_stage == 4 | corpus$seer_stage == 5 | corpus$seer_stage == 7, T, F)
selected_early <- ifelse(corpus$seer_stage == 1 | corpus$seer_stage == 2 | corpus$seer_stage == 3 | corpus$seer_stage == 6, T, F)
corpus <- corpus %>%
mutate(seer_stage_2 = ifelse(
selected_late, "later_stage",
ifelse(selected_nan, "nan", "early_stage")
)) #I guess filtering out the 8 and 9 means creating another category
#Task 2:
#We build a function
get_frequent_words <- function(dataset) {
## Read corpus
docs <- Corpus(VectorSource(unlist(dataset$MEDICATION_SUMMARY)))
## Preprocess corpus
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
## Build term document matrix
docs_term_matrix <- as.matrix(TermDocumentMatrix(docs))
sorted_docs_term_matrix <- sort(rowSums(docs_term_matrix), decreasing=TRUE)
frequent_words <- data.frame(word = names(sorted_docs_term_matrix), freq=sorted_docs_term_matrix)
frequent_words
}
fw_early <- get_frequent_words(filter(corpus, seer_stage_2 == "early_stage"))
fw_late <- get_frequent_words(filter(corpus, seer_stage_2 == "later_stage"))
fw_all <- get_frequent_words(corpus)
#We create the wc using wordcloud
wordcloud(fw_early$word, fw_early$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"))
wordcloud(fw_late$word, fw_late$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
wordcloud(fw_all$word, fw_all$freq, min.freq = 5, max.words = 100,
random.order = FALSE, colors = brewer.pal(8, "Dark2"), scale=c(2,.5))
#We create the wc using wordcloud2
wordcloud2(fw_early,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_late,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
wordcloud2(fw_all,
minRotation = 0, maxRotation = 0, color ='random-dark', size = 1, fontFamily ='Arial', ellipticity = 0.5, shape ='circle')
#Now we do the AKE
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ewt-ud-2.4-190531.udpipe')
early <- udpipe_annotate(udmodel_english, corpus_early$MEDICATION_SUMMARY)
early_df <- data.frame(early)
stats_early <- keywords_rake(x = early_df, term = "lemma", group = "doc_id",
relevant = early_df$upos %in% c("NOUN"))
stats_early$key <- factor(stats_early$keyword, levels = rev(stats_early$keyword))
barchart(key ~ rake, data = head(subset(stats_early, freq > 1), 20), col = "red",
main = "Early stage keywords identified by RAKE",
xlab = "Rake")
late <- udpipe_annotate(udmodel_english, corpus_late$MEDICATION_SUMMARY)
late_df <- data.frame(late)
stats_late <- keywords_rake(x = late_df, term = "lemma", group = "doc_id",
relevant = late_df$upos %in% c("NOUN"))
stats_late$key <- factor(stats_late$keyword, levels = rev(stats_late$keyword))
barchart(key ~ rake, data = head(subset(stats_late, freq > 1), 20), col = "blue",
main = "Late stage keywords identified by RAKE",
xlab = "Rake")
#Now we do the AKE
corpus <- corpus %>% mutate(MEDICATION_SUMMARY = tolower(MEDICATION_SUMMARY))
corpus_early <- corpus %>% filter(seer_stage_2 == 'early_stage')
corpus_late <- corpus %>% filter(seer_stage_2 == 'later_stage')
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ewt-ud-2.4-190531.udpipe')
early <- udpipe_annotate(udmodel_english, corpus_early$MEDICATION_SUMMARY)
early_df <- data.frame(early)
stats_early <- keywords_rake(x = early_df, term = "lemma", group = "doc_id",
relevant = early_df$upos %in% c("NOUN"))
stats_early$key <- factor(stats_early$keyword, levels = rev(stats_early$keyword))
barchart(key ~ rake, data = head(subset(stats_early, freq > 1), 20), col = "red",
main = "Early stage keywords identified by RAKE",
xlab = "Rake")
late <- udpipe_annotate(udmodel_english, corpus_late$MEDICATION_SUMMARY)
late_df <- data.frame(late)
stats_late <- keywords_rake(x = late_df, term = "lemma", group = "doc_id",
relevant = late_df$upos %in% c("NOUN"))
stats_late$key <- factor(stats_late$keyword, levels = rev(stats_late$keyword))
barchart(key ~ rake, data = head(subset(stats_late, freq > 1), 20), col = "blue",
main = "Late stage keywords identified by RAKE",
xlab = "Rake")
all <- udpipe_annotate(udmodel_english, corpus$MEDICATION_SUMMARY)
all_df <- data.frame(all)
stats_all <- keywords_rake(x = all_df, term = "lemma", group = "doc_id",
relevant = all_df$upos %in% c("NOUN"))
stats_all$key <- factor(stats_all$keyword, levels = rev(stats_all$keyword))
barchart(key ~ rake, data = head(subset(stats_all, freq > 1), 20), col = "grey",
main = "All cases keywords identified by RAKE",
xlab = "Rake")
View(early_df)
View(stats_all)
